1
article
dbminnehb
elang
acslab
umbc
edu
olson
umbc
edu
bryan
olson
cmsc
g
writes
one
time
pad
yeilds
ideal
security
well
known
flaw
authentication
suppose
use
random
bit
stream
pad
exclusive
encryption
operation
adversary
know
plaintext
message
change
message
work
alice
sending
bob
plaintext
p
key
stream
alice
computes
ciphertext
c
xor
p
sends
bob
eve
know
plainext
p
want
message
appear
p
eve
intercept
c
computes
c
c
xor
p
xor
p
xor
p
eve
sends
c
bob
bob
decrypts
c
computing
c
xor
p
thus
receiving
false
message
substituted
eve
firstly
aside
agree
weakness
exists
lot
trouble
believing
represents
difficulty
real
life
given
purpose
one
time
pad
give
unbreakable
security
expense
key
distribution
etc
imply
client
really
want
level
security
people
want
keep
p
secret
find
hard
believe
eve
might
happen
copy
p
lying
around
aware
argument
applies
eve
knowing
even
small
part
message
eve
must
know
exactly
byte
c
known
susequence
start
result
garbled
find
least
surprising
back
question
resource
use
one
time
pad
transmission
would
also
append
message
authentication
code
message
using
next
bit
one
time
pad
key
perhaps
original
question
basically
asked
whether
way
authenticate
message
degree
security
pad
provided
know
answer
however
would
propose
following
discussion
alice
bob
arbitrary
number
secret
random
bit
share
eve
doesn
know
find
effectively
knowing
p
corresponding
c
fact
correspond
cause
problem
message
authentication
code
created
using
one
time
pad
operation
eve
could
know
part
mac
affected
part
input
would
unable
forge
mac
correspond
required
non
linear
combiner
part
message
non
linear
simply
xoring
subtracting
whatever
doesn
exactly
effect
end
encrypted
message
c
alice
appends
n
bit
mac
computed
follows
mean
next
full
chunk
one
time
pad
compute
c
p
xor
pad
n
bit
boundary
break
c
n
bit
chunk
set
mac
initialisation
vector
chunk
sequentially
set
mac
mac
nlop
c
end
process
mac
message
authentication
code
bob
verifies
mac
obvious
manner
recovers
plaintext
p
us
pad
reproduce
mac
manner
nlop
non
linear
operator
rub
simplest
non
linear
operator
think
box
fixed
even
published
permutation
n
bit
integer
indexable
table
called
sbox
use
x
nlop
y
x
xor
sbox
y
practically
speaking
think
solves
problem
eve
never
see
intermediate
output
c
hence
deduce
perform
valid
substitution
also
practically
speaking
want
mac
fairly
large
say
bit
might
want
gigabyte
say
box
might
work
byte
sized
box
think
irrelevant
detail
discussion
hand
first
point
error
give
pointer
literature
greg
rose
australian
computing
communication
institute
ggr
acci
com
au
use
standard
phrase
hijacked
may
inadvisable
caa
