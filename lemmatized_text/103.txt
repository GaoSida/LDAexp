1
got
number
request
code
written
x
asm
borland
tasm
tasm
lga
asm
tlink
lga
asm
code
lga
ncryption
c
nick
nassuphis
code
segment
assume
c
code
d
code
org
h
start
jmp
begin
gas
particle
assigment
bit
particle
moving
east
bit
particle
moving
west
bit
particle
moving
north
bit
particle
moving
south
bit
particle
moving
east
bit
particle
moving
west
bit
particle
moving
north
bit
particle
moving
south
collisiong
rule
gas
rule
e
w
n
e
w
n
n
e
w
n
e
w
nibble
byte
reflection
rule
swap
bit
along
direction
look
table
implement
two
particle
collision
hpp
lattice
gas
hpprule
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
rule
implement
velocity
reversal
needed
run
gas
evolution
reverse
called
wallrule
particle
hit
wall
head
wallrule
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
db
b
maxbyte
equ
lineno
equ
srcptr
dw
offset
buffer
desptr
dw
offset
buffer
savebuff
db
maxbyte
lineno
dup
buffer
db
maxbyte
lineno
dup
db
dup
buffer
db
maxbyte
lineno
dup
db
dup
data
db
db
db
db
test
lattice
gas
based
encryption
db
algorithm
data
encoded
particle
db
digital
gas
whose
time
evolution
simulated
db
cellular
automaton
type
algorithm
decryption
db
achieved
running
simulation
reverse
db
thermodynamic
argument
ensures
even
single
db
bit
flipped
decryption
data
possible
db
db
gas
let
evolve
timesteps
db
one
either
run
reverse
evolution
pressing
db
space
flip
bit
run
pressing
db
db
cryptographic
application
key
would
consist
db
number
time
step
time
location
db
specific
bit
inversion
db
db
db
db
db
fill
gas
piece
code
initgas
mov
di
c
srcptr
mov
si
offset
data
mov
cx
lineno
ig
push
di
push
cx
mov
cx
maxbyte
ig
mov
al
c
si
mov
c
di
al
inc
si
inc
di
loop
ig
pop
cx
pop
di
add
di
maxbyte
loop
ig
mov
si
c
srcptr
mov
di
offset
initgas
mov
cx
maxbyte
mov
al
lg
mov
byte
ptr
c
si
al
al
inc
si
loop
lg
ret
display
gas
molecule
bouncing
around
showgas
push
e
push
si
push
di
push
cx
push
bx
mov
ax
b
h
mov
e
ax
mov
si
c
srcptr
mov
di
mov
cx
lineno
add
si
maxbyte
sg
push
cx
push
di
mov
cx
maxbyte
sg
mov
al
c
si
mov
byte
ptr
e
di
al
inc
si
add
di
dec
cx
jnz
sg
pop
di
pop
cx
add
di
loop
sg
pop
bx
pop
cx
pop
di
pop
si
pop
e
ret
c
si
sourse
data
c
di
destination
data
scanonemiddleline
first
byte
special
case
warparound
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
north
one
line
lower
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
south
one
line
higher
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
maxbyte
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
middle
byte
handled
loop
mov
cx
maxbyte
sol
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
north
one
line
lower
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
south
one
line
higher
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
loop
sol
last
byte
also
special
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
north
one
line
lower
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
south
one
line
higher
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
maxbyte
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
ret
c
si
sourse
data
c
di
destination
data
scanfirstline
first
byte
special
case
warparound
mov
bl
mov
bh
c
si
maxbyte
lineno
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
maxbyte
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
middle
byte
handled
loop
mov
cx
maxbyte
sfl
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
lineno
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
loop
sfl
last
byte
also
special
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
lineno
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
maxbyte
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
ret
c
si
sourse
data
c
di
destination
data
scanlastline
first
byte
special
case
warparound
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
lineno
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
maxbyte
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
middle
byte
handled
loop
mov
cx
maxbyte
sll
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
lineno
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
loop
sll
last
byte
also
special
mov
bl
al
assembled
byte
mov
bh
c
si
maxbyte
bh
b
bit
bl
bh
assembled
byte
mov
bh
c
si
maxbyte
lineno
bh
b
bit
bl
bh
place
stuff
al
mov
bh
c
si
west
one
byte
left
lower
bh
b
bit
bl
bh
mov
bh
c
si
maxbyte
east
one
byte
right
higher
bh
b
bit
bl
bh
mov
bh
mov
al
byte
ptr
c
bx
offset
hpprule
mov
c
di
al
inc
si
inc
di
ret
invert
velocity
gas
invertall
push
bx
push
cx
push
si
mov
si
c
srcptr
mov
bx
mov
cx
lineno
ia
push
cx
mov
cx
maxbyte
ia
mov
bl
c
si
mov
al
byte
ptr
c
bx
offset
wallrule
mov
c
si
al
inc
si
loop
ia
pop
cx
loop
ia
pop
si
pop
cx
pop
bx
ret
iterateonce
mov
si
c
srcptr
mov
di
c
desptr
mov
c
srcptr
di
mov
c
desptr
si
push
si
push
di
call
scanfirstline
pop
di
pop
si
add
si
maxbyte
add
di
maxbyte
mov
cx
lineno
dont
scan
first
last
l
push
si
push
di
push
cx
call
scanonemiddleline
pop
cx
pop
di
pop
si
add
si
maxbyte
add
di
maxbyte
loop
l
push
si
push
di
call
scanlastline
pop
si
pop
di
l
ret
iterate
hpp
rule
cx
time
iterate
push
cx
call
iterateonce
pop
cx
call
showgas
loop
iterate
ret
iterate
hpp
rule
cx
time
iterateuntil
mov
si
mov
cx
offset
iu
offset
iu
iu
mov
al
byte
ptr
c
si
offset
iu
xor
byte
ptr
c
si
offset
iu
al
inc
si
loop
iu
iu
call
iterateonce
call
showgas
mov
si
c
srcptr
mov
cx
maxbyte
mov
bx
mov
ah
mov
al
iu
mov
bl
byte
ptr
c
si
mov
dl
byte
ptr
c
bx
wallrule
ah
xor
dl
ah
al
dl
inc
si
loop
iu
mov
si
mov
cx
offset
iu
offset
iu
iu
mov
ah
byte
ptr
c
si
offset
iu
ah
al
xor
byte
ptr
c
si
offset
iu
ah
inc
si
loop
iu
jmp
iu
iu
mov
ax
offset
iu
push
ax
ret
db
dup
h
iu
push
ax
push
bx
push
cx
push
dx
push
d
mov
ah
mov
dx
c
msgptr
int
h
pop
d
pop
dx
pop
cx
pop
bx
pop
ax
ret
db
dup
h
msgptr
dw
offset
msg
msg
db
message
printed
db
code
decrypted
using
data
lattice
db
applied
decoding
routine
db
every
time
step
db
decoding
function
left
code
unchanged
db
except
gas
evolution
completelly
db
reversed
thermalization
time
equ
repetition
enough
equilibrate
gas
begin
mov
ax
h
mov
bh
mov
dh
mov
dl
mov
cx
int
h
mov
ah
mov
bh
mov
dh
mov
dl
int
h
call
initgas
call
showgas
mov
ah
int
h
push
cx
mov
cx
time
call
iterate
call
invertall
call
showgas
mov
ah
int
h
cmp
al
jne
begin
mov
si
c
srcptr
xor
byte
ptr
c
si
b
begin
mov
cx
time
call
iterateuntil
call
invertall
call
showgas
mov
ax
c
h
int
h
code
end
end
start
